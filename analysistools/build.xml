<?xml version="1.0"?>
<!-- 
 MadKit analysis tools build.xml
 Author: F. Michel
 Version: 2.0

-->

<project name="analysistools" default="jar" basedir="."> <!-- default is "jar" but can be changed to "compile" to only compile for instance -->

	<property file="../madkit.properties"/> <!-- using madkit project's default properties. -->

	<!--
	     Specify the plugin jar files and third party resources that are required for compiling (madkitkernel.jar at least) (must be located in the lib directory) 
	-->
	<fileset id="project.class.path" dir="${jars.dir}">
		<include name="madkitkernel.jar"/>
	</fileset>

	<property name="src.dir" value="src"/>
	<property name="version"  value="1.0"/>
	<property name="author"  value="Fabien Michel, Hakim Chorfi"/>
	<property name="depend"  value="madkitkernel"/> <!-- value="madkitkernel, messages, other1, other2" for instance (you will need madkitkernel at least) -->
	<property name="requires" value="" /> <!-- value="boo.jar", "images.jar", all the external jars that you would need -->
	<property name="description"  value="This plugin contains analysis agents like linechart agent that can handle messages to draw linecharts"/>

	<property name="project.category" value="tools"/>
	<property name="system.plugin" value="true"/>
	<!--
	     Options:
	     . Specify the directory where your images (jpg and gifs) are located inside the src directory (they will be added in the jar file)
	     . Specify the name of the java packages to build api docs properly.
	     . Give a title to the html pages generated.
	-->
	<property name="images.dir" value="images"/> <!-- means that images are located in "${src}/images" or its subdirectories-->
	<property name="project.label"  value="Analysis tools"/>

<!-- 
-->


<!-- 
     GENERIC PART (edit to achieve more functionalities or delete unused targets)
-->

	<target name="real-clean">
		<ant antfile="${generic.file}" dir="." target="real-clean" inheritrefs="true"/>
	</target>

	<target name="jar" description="Jars the plugin into the jars.dir directory and create launch file if a cfg file available">
		<ant antfile="${generic.file}" dir="." target="jar" inheritrefs="true"/>
	</target>

	<target name="docs">
		<ant antfile="${generic.file}" dir="." target="docs" inheritrefs="true"/>
	</target>

	<target name="clean">
		<ant antfile="${generic.file}" dir="." target="clean" inheritrefs="true"/>
	</target>

	<target name="all">
		<ant antfile="${generic.file}" dir="." target="all" inheritrefs="true"/>
	</target>

	<target name="src-dist">
		<ant antfile="${generic.file}" dir="." target="src-dist" inheritrefs="true"/>
	</target>

	<target name="bin-dist">
		<ant antfile="${generic.file}" dir="." target="bin-dist" inheritrefs="true"/>
	</target>

	<target name="doc-dist">
		<ant antfile="${generic.file}" dir="." target="doc-dist" inheritrefs="true"/>
	</target>

	<target name="standalone-dist">
		<ant antfile="${generic.file}" dir="." target="standalone-dist" inheritrefs="true"/>
	</target>
		
	<target name="plugin-dist">
		<ant antfile="${generic.file}" dir="." target="plugin-dist" inheritrefs="true"/>
	</target>

	<target name="web-dist">
		<ant antfile="${generic.file}" dir="." target="web-dist" inheritrefs="true"/>
	</target>
</project>
